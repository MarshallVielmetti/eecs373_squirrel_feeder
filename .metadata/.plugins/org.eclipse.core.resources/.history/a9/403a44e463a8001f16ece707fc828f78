/*
 * camera.c
 *
 *  Created on: Nov 21, 2024
 *      Author: mvielmet
 */

#include "camera.h"
#include "main.h"

/*
 * Camera command definitions
 */
#define VC0706_SERIAL_NUM 		0x00 /*(Serial Number)*/
#define VC0706_CMD_PREFIX 		0x56 /*(Command Prefix)*/

#define VC0706_CMD_RESET 		0x26 /*(Reset)*/
#define VC0706_CMD_SET_BAUD		0x31 /*(Baudrate)*/

#define VC0706_CMD_TAKE_PHOTO 	0x36 /*(Take Photo)*/
#define VC0706_CMD_STOP_CAPTURE 0x36 /*(Stop Capture)*/
#define VC0706_CMD_READ_DATA 	0x32 /*(Read Data Packet)*/
#define VC0706_CMD_READ_DATA_LEN 0x34 /*(Get data length)*/

#define VC0706_RESPONSE_TIMEOUT 1000

extern UART_HandleTypeDef CAM_UART_HANDLE; // Define in main.h as huartx



/*
 * HELPER FUNCTIONS
 */

/* VC0706_SendCommand
 * cmd - one of the command a data bytes
 * params - array of additional command bytes
 * params_len - length of parameters array
 */
void VC0706_SendCommand(uint8_t cmd, uint8_t *params, uint8_t params_len) {
    uint8_t buffer[16];

    /*
     * Universal Command Prefix
     */
    buffer[0] = VC0706_CMD_PREFIX;
    buffer[1] = VC0706_SERIAL_NUM;

    // Insert the command ID byte
    buffer[2] = cmd;

    /*
     * Copy params into command buffer
     */
    for (uint8_t i = 0; i < params_len; i++) {
        buffer[3 + i] = params[i];
    }

    HAL_UART_Transmit(&CAM_UART_HANDLE, buffer, 3 + params_len, HAL_MAX_DELAY);
}


/*
 * COMMANDS
 */

/* VC0706_TakePhoto
 *
 * Sends take photo command and verifies response ACK
 */
uint8_t VC0706_TakePhoto(void) {
    uint8_t takePhotoCommand[] = {0x01, 0x00}; // Parameters for taking a photo
    VC0706_SendCommand(VC0706_CMD_TAKE_PHOTO, takePhotoCommand, sizeof(takePhotoCommand));

    // response array
    uint8_t response[5]={0};
    HAL_StatusTypeDef status = HAL_UART_Receive(&CAM_UART_HANDLE, response, sizeof(response), 1000); // 1-second timeout

    if (status != HAL_OK) {
        // Timeout or error occurred, handle accordingly
        return 0; // Indicate failure to receive acknowledgment
    }

    // Check if the received response is as expected: 0x76 0x00 0x36 0x00 0x00
    return response[0] == 0x76 && response[1] == 0x00 && response[2] == 0x36 && response[3] == 0x00 && response[4] == 0x00;
}


/* VC0706_ReadImageDataLength
 *
 * Sends read image data length command returns correctly formated uint16_t containing
 * the length of the most recently taken image in bytes
 *
 */
uint16_t VC0706_ReadImageDataLength(void) {
	uint8_t read_image_len_cmd[] = {0x01, 0x00};
	VC0706_SendCommand(VC0706_CMD_READ_DATA_LEN, read_image_len_cmd, sizeof(read_image_len_cmd));

	uint8_t response[9]; // repsonse buffer
	HAL_StatusTypeDef status = HAL_UART_Receive(&CAM_UART_HANDLE, response, sizeof(response), 1000);


    if (status != HAL_OK) {
    	return 0;
    }

    uint16_t image_len = (response[7] << 8) | response[8];

    return image_len;
}

